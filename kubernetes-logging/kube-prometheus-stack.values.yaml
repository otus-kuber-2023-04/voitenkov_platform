prometheus:
  prometheusSpec:
    tolerations:
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule
    nodeSelector:
      node-group: infra-pool
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false      
  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      cert-manager.io/acme-challenge-type: http01
    ingressClassName: nginx
    hosts:
      - prometheus.k8s-dev.voytenkov.ru
    paths:
      - /
    tls:
      - secretName: prometheus.k8s-dev.voytenkov.ru
        hosts:
          - prometheus.k8s-dev.voytenkov.ru

prometheusOperator:
  tolerations:
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule
  nodeSelector:
    node-group: infra-pool

prometheus-node-exporter:
  tolerations:
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule
  nodeSelector:
    node-group: infra-pool

kube-state-metrics:
  tolerations:
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule
  nodeSelector:
    node-group: infra-pool

alertmanager:
  alertmanagerSpec:
    tolerations:
      - key: node-role
        operator: Equal
        value: infra
        effect: NoSchedule
    nodeSelector:
      node-group: infra-pool
  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      cert-manager.io/acme-challenge-type: http01
    ingressClassName: nginx
    hosts:
      - alertmanager.k8s-dev.voytenkov.ru
    paths:
      - /
    tls:
      - secretName: alertmanager.k8s-dev.voytenkov.ru
        hosts:
          - alertmanager.k8s-dev.voytenkov.ru

grafana:
  tolerations:
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule
  nodeSelector:
    node-group: infra-pool
  enabled: true
  defaultDashboardsEnabled: true
  adminPassword: password
  ingress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      cert-manager.io/acme-challenge-type: http01
    ingressClassName: nginx
    hosts:
      - grafana.k8s-dev.voytenkov.ru
    path: /
    tls:
      - secretName: grafana.k8s-dev.voytenkov.ru
        hosts:
          - grafana.k8s-dev.voytenkov.ru
    additionalDataSources:
    - name: Loki
      type: loki
      access: proxy
      url: http://loki:3100
      jsonData:
        maxLines: 1000